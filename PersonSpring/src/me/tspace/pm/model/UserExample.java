package me.tspace.pm.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UserExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table t_user
	 * @mbggenerated  Thu Jun 06 15:59:42 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table t_user
	 * @mbggenerated  Thu Jun 06 15:59:42 CST 2013
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table t_user
	 * @mbggenerated  Thu Jun 06 15:59:42 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_user
	 * @mbggenerated  Thu Jun 06 15:59:42 CST 2013
	 */
	public UserExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_user
	 * @mbggenerated  Thu Jun 06 15:59:42 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_user
	 * @mbggenerated  Thu Jun 06 15:59:42 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_user
	 * @mbggenerated  Thu Jun 06 15:59:42 CST 2013
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_user
	 * @mbggenerated  Thu Jun 06 15:59:42 CST 2013
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_user
	 * @mbggenerated  Thu Jun 06 15:59:42 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_user
	 * @mbggenerated  Thu Jun 06 15:59:42 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_user
	 * @mbggenerated  Thu Jun 06 15:59:42 CST 2013
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_user
	 * @mbggenerated  Thu Jun 06 15:59:42 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_user
	 * @mbggenerated  Thu Jun 06 15:59:42 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_user
	 * @mbggenerated  Thu Jun 06 15:59:42 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table t_user
	 * @mbggenerated  Thu Jun 06 15:59:42 CST 2013
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andUserIdIsNull() {
			addCriterion("USER_ID is null");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNotNull() {
			addCriterion("USER_ID is not null");
			return (Criteria) this;
		}

		public Criteria andUserIdEqualTo(Integer value) {
			addCriterion("USER_ID =", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotEqualTo(Integer value) {
			addCriterion("USER_ID <>", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThan(Integer value) {
			addCriterion("USER_ID >", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("USER_ID >=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThan(Integer value) {
			addCriterion("USER_ID <", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThanOrEqualTo(Integer value) {
			addCriterion("USER_ID <=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdIn(List<Integer> values) {
			addCriterion("USER_ID in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotIn(List<Integer> values) {
			addCriterion("USER_ID not in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdBetween(Integer value1, Integer value2) {
			addCriterion("USER_ID between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
			addCriterion("USER_ID not between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andUserLoginIdIsNull() {
			addCriterion("USER_LOGIN_ID is null");
			return (Criteria) this;
		}

		public Criteria andUserLoginIdIsNotNull() {
			addCriterion("USER_LOGIN_ID is not null");
			return (Criteria) this;
		}

		public Criteria andUserLoginIdEqualTo(Integer value) {
			addCriterion("USER_LOGIN_ID =", value, "userLoginId");
			return (Criteria) this;
		}

		public Criteria andUserLoginIdNotEqualTo(Integer value) {
			addCriterion("USER_LOGIN_ID <>", value, "userLoginId");
			return (Criteria) this;
		}

		public Criteria andUserLoginIdGreaterThan(Integer value) {
			addCriterion("USER_LOGIN_ID >", value, "userLoginId");
			return (Criteria) this;
		}

		public Criteria andUserLoginIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("USER_LOGIN_ID >=", value, "userLoginId");
			return (Criteria) this;
		}

		public Criteria andUserLoginIdLessThan(Integer value) {
			addCriterion("USER_LOGIN_ID <", value, "userLoginId");
			return (Criteria) this;
		}

		public Criteria andUserLoginIdLessThanOrEqualTo(Integer value) {
			addCriterion("USER_LOGIN_ID <=", value, "userLoginId");
			return (Criteria) this;
		}

		public Criteria andUserLoginIdIn(List<Integer> values) {
			addCriterion("USER_LOGIN_ID in", values, "userLoginId");
			return (Criteria) this;
		}

		public Criteria andUserLoginIdNotIn(List<Integer> values) {
			addCriterion("USER_LOGIN_ID not in", values, "userLoginId");
			return (Criteria) this;
		}

		public Criteria andUserLoginIdBetween(Integer value1, Integer value2) {
			addCriterion("USER_LOGIN_ID between", value1, value2, "userLoginId");
			return (Criteria) this;
		}

		public Criteria andUserLoginIdNotBetween(Integer value1, Integer value2) {
			addCriterion("USER_LOGIN_ID not between", value1, value2,
					"userLoginId");
			return (Criteria) this;
		}

		public Criteria andUserFamilyIdIsNull() {
			addCriterion("USER_FAMILY_ID is null");
			return (Criteria) this;
		}

		public Criteria andUserFamilyIdIsNotNull() {
			addCriterion("USER_FAMILY_ID is not null");
			return (Criteria) this;
		}

		public Criteria andUserFamilyIdEqualTo(Integer value) {
			addCriterion("USER_FAMILY_ID =", value, "userFamilyId");
			return (Criteria) this;
		}

		public Criteria andUserFamilyIdNotEqualTo(Integer value) {
			addCriterion("USER_FAMILY_ID <>", value, "userFamilyId");
			return (Criteria) this;
		}

		public Criteria andUserFamilyIdGreaterThan(Integer value) {
			addCriterion("USER_FAMILY_ID >", value, "userFamilyId");
			return (Criteria) this;
		}

		public Criteria andUserFamilyIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("USER_FAMILY_ID >=", value, "userFamilyId");
			return (Criteria) this;
		}

		public Criteria andUserFamilyIdLessThan(Integer value) {
			addCriterion("USER_FAMILY_ID <", value, "userFamilyId");
			return (Criteria) this;
		}

		public Criteria andUserFamilyIdLessThanOrEqualTo(Integer value) {
			addCriterion("USER_FAMILY_ID <=", value, "userFamilyId");
			return (Criteria) this;
		}

		public Criteria andUserFamilyIdIn(List<Integer> values) {
			addCriterion("USER_FAMILY_ID in", values, "userFamilyId");
			return (Criteria) this;
		}

		public Criteria andUserFamilyIdNotIn(List<Integer> values) {
			addCriterion("USER_FAMILY_ID not in", values, "userFamilyId");
			return (Criteria) this;
		}

		public Criteria andUserFamilyIdBetween(Integer value1, Integer value2) {
			addCriterion("USER_FAMILY_ID between", value1, value2,
					"userFamilyId");
			return (Criteria) this;
		}

		public Criteria andUserFamilyIdNotBetween(Integer value1, Integer value2) {
			addCriterion("USER_FAMILY_ID not between", value1, value2,
					"userFamilyId");
			return (Criteria) this;
		}

		public Criteria andUserLevelIsNull() {
			addCriterion("USER_LEVEL is null");
			return (Criteria) this;
		}

		public Criteria andUserLevelIsNotNull() {
			addCriterion("USER_LEVEL is not null");
			return (Criteria) this;
		}

		public Criteria andUserLevelEqualTo(Integer value) {
			addCriterion("USER_LEVEL =", value, "userLevel");
			return (Criteria) this;
		}

		public Criteria andUserLevelNotEqualTo(Integer value) {
			addCriterion("USER_LEVEL <>", value, "userLevel");
			return (Criteria) this;
		}

		public Criteria andUserLevelGreaterThan(Integer value) {
			addCriterion("USER_LEVEL >", value, "userLevel");
			return (Criteria) this;
		}

		public Criteria andUserLevelGreaterThanOrEqualTo(Integer value) {
			addCriterion("USER_LEVEL >=", value, "userLevel");
			return (Criteria) this;
		}

		public Criteria andUserLevelLessThan(Integer value) {
			addCriterion("USER_LEVEL <", value, "userLevel");
			return (Criteria) this;
		}

		public Criteria andUserLevelLessThanOrEqualTo(Integer value) {
			addCriterion("USER_LEVEL <=", value, "userLevel");
			return (Criteria) this;
		}

		public Criteria andUserLevelIn(List<Integer> values) {
			addCriterion("USER_LEVEL in", values, "userLevel");
			return (Criteria) this;
		}

		public Criteria andUserLevelNotIn(List<Integer> values) {
			addCriterion("USER_LEVEL not in", values, "userLevel");
			return (Criteria) this;
		}

		public Criteria andUserLevelBetween(Integer value1, Integer value2) {
			addCriterion("USER_LEVEL between", value1, value2, "userLevel");
			return (Criteria) this;
		}

		public Criteria andUserLevelNotBetween(Integer value1, Integer value2) {
			addCriterion("USER_LEVEL not between", value1, value2, "userLevel");
			return (Criteria) this;
		}

		public Criteria andUserNameIsNull() {
			addCriterion("USER_NAME is null");
			return (Criteria) this;
		}

		public Criteria andUserNameIsNotNull() {
			addCriterion("USER_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andUserNameEqualTo(String value) {
			addCriterion("USER_NAME =", value, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameNotEqualTo(String value) {
			addCriterion("USER_NAME <>", value, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameGreaterThan(String value) {
			addCriterion("USER_NAME >", value, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameGreaterThanOrEqualTo(String value) {
			addCriterion("USER_NAME >=", value, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameLessThan(String value) {
			addCriterion("USER_NAME <", value, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameLessThanOrEqualTo(String value) {
			addCriterion("USER_NAME <=", value, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameLike(String value) {
			addCriterion("USER_NAME like", value, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameNotLike(String value) {
			addCriterion("USER_NAME not like", value, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameIn(List<String> values) {
			addCriterion("USER_NAME in", values, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameNotIn(List<String> values) {
			addCriterion("USER_NAME not in", values, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameBetween(String value1, String value2) {
			addCriterion("USER_NAME between", value1, value2, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameNotBetween(String value1, String value2) {
			addCriterion("USER_NAME not between", value1, value2, "userName");
			return (Criteria) this;
		}

		public Criteria andUserEmailIsNull() {
			addCriterion("USER_EMAIL is null");
			return (Criteria) this;
		}

		public Criteria andUserEmailIsNotNull() {
			addCriterion("USER_EMAIL is not null");
			return (Criteria) this;
		}

		public Criteria andUserEmailEqualTo(String value) {
			addCriterion("USER_EMAIL =", value, "userEmail");
			return (Criteria) this;
		}

		public Criteria andUserEmailNotEqualTo(String value) {
			addCriterion("USER_EMAIL <>", value, "userEmail");
			return (Criteria) this;
		}

		public Criteria andUserEmailGreaterThan(String value) {
			addCriterion("USER_EMAIL >", value, "userEmail");
			return (Criteria) this;
		}

		public Criteria andUserEmailGreaterThanOrEqualTo(String value) {
			addCriterion("USER_EMAIL >=", value, "userEmail");
			return (Criteria) this;
		}

		public Criteria andUserEmailLessThan(String value) {
			addCriterion("USER_EMAIL <", value, "userEmail");
			return (Criteria) this;
		}

		public Criteria andUserEmailLessThanOrEqualTo(String value) {
			addCriterion("USER_EMAIL <=", value, "userEmail");
			return (Criteria) this;
		}

		public Criteria andUserEmailLike(String value) {
			addCriterion("USER_EMAIL like", value, "userEmail");
			return (Criteria) this;
		}

		public Criteria andUserEmailNotLike(String value) {
			addCriterion("USER_EMAIL not like", value, "userEmail");
			return (Criteria) this;
		}

		public Criteria andUserEmailIn(List<String> values) {
			addCriterion("USER_EMAIL in", values, "userEmail");
			return (Criteria) this;
		}

		public Criteria andUserEmailNotIn(List<String> values) {
			addCriterion("USER_EMAIL not in", values, "userEmail");
			return (Criteria) this;
		}

		public Criteria andUserEmailBetween(String value1, String value2) {
			addCriterion("USER_EMAIL between", value1, value2, "userEmail");
			return (Criteria) this;
		}

		public Criteria andUserEmailNotBetween(String value1, String value2) {
			addCriterion("USER_EMAIL not between", value1, value2, "userEmail");
			return (Criteria) this;
		}

		public Criteria andUserRegdateIsNull() {
			addCriterion("USER_REGDATE is null");
			return (Criteria) this;
		}

		public Criteria andUserRegdateIsNotNull() {
			addCriterion("USER_REGDATE is not null");
			return (Criteria) this;
		}

		public Criteria andUserRegdateEqualTo(Date value) {
			addCriterion("USER_REGDATE =", value, "userRegdate");
			return (Criteria) this;
		}

		public Criteria andUserRegdateNotEqualTo(Date value) {
			addCriterion("USER_REGDATE <>", value, "userRegdate");
			return (Criteria) this;
		}

		public Criteria andUserRegdateGreaterThan(Date value) {
			addCriterion("USER_REGDATE >", value, "userRegdate");
			return (Criteria) this;
		}

		public Criteria andUserRegdateGreaterThanOrEqualTo(Date value) {
			addCriterion("USER_REGDATE >=", value, "userRegdate");
			return (Criteria) this;
		}

		public Criteria andUserRegdateLessThan(Date value) {
			addCriterion("USER_REGDATE <", value, "userRegdate");
			return (Criteria) this;
		}

		public Criteria andUserRegdateLessThanOrEqualTo(Date value) {
			addCriterion("USER_REGDATE <=", value, "userRegdate");
			return (Criteria) this;
		}

		public Criteria andUserRegdateIn(List<Date> values) {
			addCriterion("USER_REGDATE in", values, "userRegdate");
			return (Criteria) this;
		}

		public Criteria andUserRegdateNotIn(List<Date> values) {
			addCriterion("USER_REGDATE not in", values, "userRegdate");
			return (Criteria) this;
		}

		public Criteria andUserRegdateBetween(Date value1, Date value2) {
			addCriterion("USER_REGDATE between", value1, value2, "userRegdate");
			return (Criteria) this;
		}

		public Criteria andUserRegdateNotBetween(Date value1, Date value2) {
			addCriterion("USER_REGDATE not between", value1, value2,
					"userRegdate");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table t_user
	 * @mbggenerated  Thu Jun 06 15:59:42 CST 2013
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_user
     *
     * @mbggenerated do_not_delete_during_merge Wed Jun 05 23:00:54 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}